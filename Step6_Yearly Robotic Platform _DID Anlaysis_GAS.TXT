
Step 4- Further Cleaning the data, addint totals for open, laproscopic and robtoic procedures. (following code is for the year 2018 data file)
In this step the individual yearly files were also stacked and a master file for 2010-2020 was created. 

And robotic versus non robotic Hospitals were flagged, this analysis is for GASTRECTOMY


use "file path"

codebook MCARE_NBR

tab idx_col 
tab idx_lob 
tab idx_gas 
tab idx_reflux 

tab idx_pr


tab idx_gas 

keep if idx_gas == 1 | idx_gas == 2 | idx_gas == 3


drop idx_lob idx_col idx_reflux 

drop IDX IDX2

sort MCARE_NBR YEAR
* the first obs is always an index
by MCARE_NBR YEAR: gen IDX = _n == 1

by MCARE_NBR YEAR: gen IDX2 = _n 

*******************************************************************************
* ADDING THE TOTAL CASES FOR OPEN PROCEDURES-COL
bysort MCARE_NBR YEAR: egen Tot_Open_Gas = sum(idx_gas==1) 

* ADDING THE TOTAL CASES FOR LAP PROCEDURES
bysort MCARE_NBR YEAR: egen Tot_Lap_Gas = sum(idx_gas==2) 

* ADDING THE TOTAL CASES FOR ROBOTIC PROCEDURES
bysort MCARE_NBR YEAR: egen Tot_Rob_Gas = sum(idx_gas==3) 

* ADDING THE TOTAL CASES FOR ALL PROCEDURES
bysort MCARE_NBR YEAR: egen Tot_Gas = sum(idx_gas == 1 | idx_gas == 2 | idx_gas == 3  ) 

order MCARE_NBR IDX Tot_Open_Gas Tot_Lap_Gas Tot_Rob_Gas Tot_Gas YEAR, first
*******************************************************************************


keep if IDX == 1

* the first obs is always an index
by MCARE_NBR : gen IdX = _n == 1
by MCARE_NBR : gen Idx2 = _n 

tab Idx2

foreach v of var Tot_Rob_Gas{
gen Robot = 1 if `v' != 0 & IdX == 1 
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 2 & Robot[_n-1] != 1 
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 3 & Robot[_n-1] != 1 & Robot[_n-2] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 4 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 5 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 6 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 7 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 8 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1 & Robot[_n-7] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 9 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1 & Robot[_n-7] != 1 & Robot[_n-8] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 10 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1 & Robot[_n-7] != 1 & Robot[_n-8] != 1 & Robot[_n-9] != 1
}
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 11 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1 & Robot[_n-7] != 1 & Robot[_n-8] != 1 & Robot[_n-9] != 1 & Robot[_n-10] != 1
} 
foreach v of var Tot_Rob_Gas{
replace Robot = 1 if `v' != 0 & Idx2 == 12 & Robot[_n-1] != 1 & Robot[_n-2] != 1 & Robot[_n-3] != 1 & Robot[_n-4] != 1 & Robot[_n-5] != 1 & Robot[_n-6] != 1 &  Robot[_n-7] != 1 & Robot[_n-8] != 1 & Robot[_n-9] != 1 & Robot[_n-10] != 1 & Robot[_n-11] != 1
} 

gen idx_rob = Robot

** to Run the second part of the code highlighting the non robotic hospital you have to stop at the second last count of Idx2, which over here is 8
** so I did not run the last part of code with Robot[_n+9] 
** so I did not run the last part of code with Robot[_n+10]

by MCARE_NBR : replace Robot = 0 if (Tot_Rob_Gas ==0 & IdX == 1 & Robot != 1)  
by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == 1 & IdX != 0 )  
by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == 1 & IdX != 0 )  
by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == 1 & IdX != 0  )  
by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == 1 & IdX != 0   )  

by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == 1 & IdX != 0   )  


by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == . & IdX != 0 & Robot[_n+6] == 1 & IdX != 0    )  


by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == . & IdX != 0 & Robot[_n+6] == . & IdX != 0  & Robot[_n+7] == 1 & IdX != 0   )  


by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == . & IdX != 0 & Robot[_n+6] == . & IdX != 0  & Robot[_n+7] == . & IdX != 0  & Robot[_n+8] == 1 & IdX != 0   )  

by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == . & IdX != 0 & Robot[_n+6] == . & IdX != 0  & Robot[_n+7] == . & IdX != 0  & Robot[_n+8] == . & IdX != 0  & Robot[_n+9] == 1 & IdX != 0  )  

*by MCARE_NBR : replace Robot = . if (Robot == 0 & IdX == 1 & Robot[_n+1] == . & IdX != 0 & Robot[_n+2] == . & IdX != 0 & Robot[_n+3] == . & IdX != 0 & Robot[_n+4] == . & IdX != 0 & Robot[_n+5] == . & IdX != 0 & Robot[_n+6] == . & IdX != 0  & Robot[_n+7] == . & IdX != 0  & Robot[_n+8] == . & IdX != 0  & Robot[_n+9] == . & IdX != 0 & Robot[_n+10] == . & IdX != 0  )  


replace idx_rob = Robot if Robot == 0 


*100012
*100025
*100044
*100265
*2396005



tab Robot
tab idx_rob

replace Robot = . in 81
replace idx_rob = . in 81

replace Robot = . in 135
replace idx_rob = . in 135

replace Robot = . in 251
replace idx_rob = . in 251

replace Robot = . in 1197
replace idx_rob = . in 1197

replace Robot = . in 1442
replace idx_rob = . in 1442

codebook MCARE_NBR if idx_rob != .

codebook MCARE_NBR 
codebook MCARE_NBR if idx_rob == 1
codebook MCARE_NBR if idx_rob == 0

replace Robot= 0 if Robot == . 

tab Robot

gen time = 1 if Robot == 1
replace time = 0 if time == .

gen did = (time*Robot)

replace MOD_CODE = "CL01" if MOD_CODE == "CL00"

tab MOD_CODE if idx_rob == 0 | idx_rob== 1

tab MOD_CODE idx_rob
tab MOD_CODE if idx_rob== 0
tab MOD_CODE if idx_rob== 1

poisson  Tot_Gas did time Robot , irr
